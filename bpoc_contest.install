<?php

/**
 * Implementation of hook_requirements().
 */
function bpoc_contest_requirements($phase) {
  /**
   * If the Contenty Copy module is not enabled before we begin our install function, then the install
   * function will fail. This hook prevents the install from proceding if the Content Copy module is
   * not already installed and enabled.
   */
  $requirements = array();
  $t = get_t();

  switch ($phase) {
    case 'install':
      $error = FALSE;
      if (!module_exists('content_copy')) {
        $error = TRUE;
        $value = $t('Content Copy module to be pre-installed.');
        $severity = REQUIREMENT_ERROR;
      }
                        
      if ($error) {
        $requirements['bpoc_contest'] = array(
          'title' => $t('BPOC Contest requirements'),
          'value' => $value . $t(' If the required modules are now installed, please enable BPOC Contest again.'),
          'severity' => $severity,
        );
      }
    break;
  }
  return $requirements;
}

/**
 * Implementation of hook_install().
 */
function bpoc_contest_install() {
  // Create tables.
  drupal_install_schema('bpoc_contest');

  $filename = drupal_get_path('module','bpoc_contest') . "/bpoc_contest.install.inc";
  $content = implode ('', file ($filename));
  // Build form state
  $form_state = array(
    'values' => array(
      'type_name' => '<create>',
      'macro' => $content,
    ),
  );
  drupal_execute("content_copy_import_form", $form_state);
}

/**
 * Implementation of hook_uninstall().
 */
function bpoc_contest_uninstall() {
  $t = get_t();
  // Remove tables.
  drupal_uninstall_schema('bpoc_contest');

  $content = content_types('contest');
  if (count($content['fields']) > 0) {
    module_load_include('inc', 'content', 'includes/content.crud');
    foreach ($content['fields'] as $key => $field) {
      content_field_instance_delete($key, 'contest', FALSE);
    }
    drupal_set_message($t('cck fields have been deleted from contest contest type'));
  }
  content_clear_type_cache(TRUE);
  menu_rebuild();
  $groups = fieldgroup_groups('contest');
  if (count($groups) > 0) {
    foreach ($groups as $group) {
      fieldgroup_delete('contest', $group['group_name']);
    }
    drupal_set_message($t('group fields have been deleted from contest contest type'));
  }
  content_module_delete('contest');
  node_type_delete('contest');
  content_clear_type_cache();
  drupal_flush_all_caches();
}

/**
 * Implementation of hook_schema().
 */
function bpoc_contest_schema() {
  $schema['bpoc_contest_votes'] = array(
    'description' => t('Stores votes from the bpoc_contest module.'),
    'fields' => array(
      'vote_id'  => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'email_address' => array(
        'description' => t('The email address of the voter.'),
        'type' => 'varchar',
        'length' => 128,
      ),
    ),
    'primary key' => array('vote_id'),
    'indexes' => array(
      'vote_id' => array('vote_id'),
    ),
  );
  return $schema;
}
